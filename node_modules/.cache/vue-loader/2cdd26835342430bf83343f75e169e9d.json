{"remainingRequest":"/Users/ghyeon/laptime_web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ghyeon/laptime_web/src/components/StopWatch.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ghyeon/laptime_web/src/components/StopWatch.vue","mtime":1574999600148},{"path":"/Users/ghyeon/laptime_web/node_modules/vuetify-loader/lib/loader.js","mtime":1564062719000},{"path":"/Users/ghyeon/laptime_web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ghyeon/laptime_web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n\n\nexport default {\n    data(){\n        return{\n            time: '00분 00초 000',\n            timebegan: null,\n            timeStopped: null,\n            stoppedDuration: 0,\n            started: null,\n            running: false,\n            previousID: -1\n        }\n    },\n    methods:{\n      start: function(){\n        if(this.running) return;\n        if (this.timeBegan === null) {\n          this.reset();\n          this.timeBegan = new Date();\n        }\n\n        if (this.timeStopped !== null) {\n          this.stoppedDuration += (new Date() - this.timeStopped);\n        }\n\n        this.started = setInterval(this.clockRunning, 10);\t\n        this.running = true;\n      },\n      stop: function(){\n        this.running = false;\n        this.timeStopped = new Date();\n        clearInterval(this.started);\n      },\n      reset: function(){\n        this.running = false;\n        clearInterval(this.started);\n        this.stoppedDuration = 0;\n        this.timeBegan = null;\n        this.timeStopped = null;\n        this.time = \"00분 00초 000\";\n      },\n      clockRunning: function(){\n        var currentTime = new Date()\n        , timeElapsed = new Date(currentTime - this.timeBegan - this.stoppedDuration)\n        , min = timeElapsed.getUTCMinutes()\n        , sec = timeElapsed.getUTCSeconds()\n        , ms = timeElapsed.getUTCMilliseconds();\n\n        this.time = \n          this.zeroPrefix(min, 2) + \"분 \" + \n          this.zeroPrefix(sec, 2) + \"초 \" + \n          this.zeroPrefix(ms, 3);\n      },\n\n      zeroPrefix: function (num, digit) {\n        var zero = '';\n        for(var i = 0; i < digit; i++) {\n          zero += '0';\n        }\n        return (zero + num).slice(-digit);\n      },\n      fetchData: function(){\n        this.$http.get('http://192.168.0.71:5000/status')\n        .then((result) => {\n          if (result.data == 1){\n            if (!this.running){\n              this.reset();\n              this.start();\n            }\n          }\n        })\n        this.$http.get('http://192.168.0.71:5000/getid')\n          .then((result) => {\n            if (this.previousID == -1 && result.data != -1){\n              this.stop(); \n              this.reset();\n            }\n            this.previousID = result.data;\n          })\n        }\n      \n    },\n    mounted: function(){\n      this.fetchData();\n      this.interval = setInterval(function(){\n        this.fetchData();\n      }.bind(this), 500);\n    }\n  }\n",{"version":3,"sources":["StopWatch.vue"],"names":[],"mappings":";;;;;;;;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"StopWatch.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div id=\"clock\">\n    <!-- <p><span class=\"time\">제 2회 국민대학교 자율주행 경진대회</span></p> -->\n    <p><span class=\"time\">{{ time }}</span></p>\n  </div>\n</template>\n\n<script>\n\nexport default {\n    data(){\n        return{\n            time: '00분 00초 000',\n            timebegan: null,\n            timeStopped: null,\n            stoppedDuration: 0,\n            started: null,\n            running: false,\n            previousID: -1\n        }\n    },\n    methods:{\n      start: function(){\n        if(this.running) return;\n        if (this.timeBegan === null) {\n          this.reset();\n          this.timeBegan = new Date();\n        }\n\n        if (this.timeStopped !== null) {\n          this.stoppedDuration += (new Date() - this.timeStopped);\n        }\n\n        this.started = setInterval(this.clockRunning, 10);\t\n        this.running = true;\n      },\n      stop: function(){\n        this.running = false;\n        this.timeStopped = new Date();\n        clearInterval(this.started);\n      },\n      reset: function(){\n        this.running = false;\n        clearInterval(this.started);\n        this.stoppedDuration = 0;\n        this.timeBegan = null;\n        this.timeStopped = null;\n        this.time = \"00분 00초 000\";\n      },\n      clockRunning: function(){\n        var currentTime = new Date()\n        , timeElapsed = new Date(currentTime - this.timeBegan - this.stoppedDuration)\n        , min = timeElapsed.getUTCMinutes()\n        , sec = timeElapsed.getUTCSeconds()\n        , ms = timeElapsed.getUTCMilliseconds();\n\n        this.time = \n          this.zeroPrefix(min, 2) + \"분 \" + \n          this.zeroPrefix(sec, 2) + \"초 \" + \n          this.zeroPrefix(ms, 3);\n      },\n\n      zeroPrefix: function (num, digit) {\n        var zero = '';\n        for(var i = 0; i < digit; i++) {\n          zero += '0';\n        }\n        return (zero + num).slice(-digit);\n      },\n      fetchData: function(){\n        this.$http.get('http://192.168.0.71:5000/status')\n        .then((result) => {\n          if (result.data == 1){\n            if (!this.running){\n              this.reset();\n              this.start();\n            }\n          }\n        })\n        this.$http.get('http://192.168.0.71:5000/getid')\n          .then((result) => {\n            if (this.previousID == -1 && result.data != -1){\n              this.stop(); \n              this.reset();\n            }\n            this.previousID = result.data;\n          })\n        }\n      \n    },\n    mounted: function(){\n      this.fetchData();\n      this.interval = setInterval(function(){\n        this.fetchData();\n      }.bind(this), 500);\n    }\n  }\n</script>\n\n<style>\n@import url(\"https://fonts.googleapis.com/css?family=Share+Tech+Mono\");\nhtml, body {\n  padding: auto;\n  margin: auto;\n  width: 100%;\n  height: 100%;\n  font-family: 'Share Tech Mono', sans-serif\n}\n\n#clock {\n  background-color: #FFFFFF;\n  font-family: 'Share Tech Mono', sans-serif;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  justify-content: center;\n  align-content: center;\n  align-items: center;\n  order: 0;\n  flex: 0 1 auto;\n  align-self: center;\n  color: #0a0a0a;\n  margin-bottom: 3em;\n}\n#clock .time {\n  font-size: 6.5em;\n}\n#clock .text {\n  margin-top: 30px;\n  font-size: 1em;\n  color: rgba(200, 200, 200, 0.15);\n  text-align: center;\n}\n#clock .text a {\n  text-decoration: none;\n  color: inherit;\n  transition: color .1s ease-out;\n}\n#clock .text a:hover {\n  color: #c8c8c8;\n}\n#clock .btn-container {\n  display: flex;\n  margin-top: 15px;\n}\n#clock .btn-container a {\n  text-align: center;\n  font-family: 'Share Tech Mono', sans-serif;\n  background: transparent;\n  border: none;\n  color: #c8c8c8;\n  padding: 10px 15px;\n  margin: 0 10px;\n  text-transform: uppercase;\n  font-size: 2em;\n  cursor: pointer;\n  flex-grow: 1;\n  transition: color .1s ease-out;\n}\n#clock .btn-container a:hover {\n  color: white;\n}\n\n</style>"]}]}